@page "/tokenproxy"
@using System.Net.Http
@using System.Text
@using System.Text.Json
@using System.Text.Json.Serialization
@inject IConfiguration Configuration

<h3>Nexar Token Debug</h3>

<div class="card">
    <div class="card-body">
        <h5 class="card-title">Current OAuth Settings</h5>
        <div class="mb-3">
            <label for="clientId" class="form-label">Client ID</label>
            <input type="text" class="form-control" id="clientId" @bind="clientId" />
        </div>
        <div class="mb-3">
            <label for="clientSecret" class="form-label">Client Secret</label>
            <input type="text" class="form-control" id="clientSecret" @bind="clientSecret" />
        </div>
        <button class="btn btn-primary" @onclick="TestAuth">Test Authentication</button>
        
        @if (!string.IsNullOrEmpty(message))
        {
            <div class="alert @alertClass mt-3" role="alert">
                @message
            </div>
        }
        
        @if (!string.IsNullOrEmpty(responseContent))
        {
            <div class="mt-3">
                <h6>Response Content:</h6>
                <pre class="bg-light p-3 rounded">@responseContent</pre>
            </div>
        }
    </div>
</div>

@code {
    private string clientId = "";
    private string clientSecret = "";
    private string message = "";
    private string alertClass = "";
    private string responseContent = "";
    
    protected override void OnInitialized()
    {
        clientId = Configuration["Octopart:ClientId"] ?? "";
        clientSecret = Configuration["Octopart:ClientSecret"] ?? "";
    }
    
    private async Task TestAuth()
    {
        message = "Testing authentication...";
        alertClass = "alert-info";
        responseContent = "";
        StateHasChanged();
        
        try
        {
            using var httpClient = new HttpClient();
            
            // Create the token request with Form URL Encoded content
            var content = new FormUrlEncodedContent(new[]
            {
                new KeyValuePair<string, string>("grant_type", "client_credentials"),
                new KeyValuePair<string, string>("client_id", clientId),
                new KeyValuePair<string, string>("client_secret", clientSecret),
                new KeyValuePair<string, string>("scope", "supply.domain")
            });
            
            // Send request
            var response = await httpClient.PostAsync("https://identity.nexar.com/connect/token", content);
            responseContent = await response.Content.ReadAsStringAsync();
            
            if (response.IsSuccessStatusCode)
            {
                message = "Successfully authenticated!";
                alertClass = "alert-success";
            }
            else
            {
                message = $"Authentication failed: {response.StatusCode}";
                alertClass = "alert-danger";
            }
        }
        catch (Exception ex)
        {
            message = $"Error: {ex.Message}";
            alertClass = "alert-danger";
        }
    }
} 