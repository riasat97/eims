// <auto-generated />
using System;
using EIMS.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EIMS.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("EIMS.Shared.Models.Part", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AttritionParameters")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("AveragePurchasePrice")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("CadKeys")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Dimensions")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal?>("EstimatedTotalValue")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Footprint")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("LastUsed")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LocalPartNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("Location")
                        .HasColumnType("longtext");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("longtext");

                    b.Property<string>("ManufacturerPartNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Notes")
                        .HasColumnType("longtext");

                    b.Property<decimal>("OrderedStock")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("PhysicalSpecs")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal?>("PurchaseValue")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TechnicalSpecs")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("TotalStock")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UsedInMetaParts")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UsedInProjects")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Parts");
                });

            modelBuilder.Entity("PartPart", b =>
                {
                    b.Property<int>("PartId")
                        .HasColumnType("int");

                    b.Property<int>("SubstitutesId")
                        .HasColumnType("int");

                    b.HasKey("PartId", "SubstitutesId");

                    b.HasIndex("SubstitutesId");

                    b.ToTable("PartSubstitutes", (string)null);
                });

            modelBuilder.Entity("EIMS.Shared.Models.Part", b =>
                {
                    b.OwnsMany("EIMS.Shared.Models.Document", "Documents", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<string>("FilePath")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<int>("PartId")
                                .HasColumnType("int");

                            b1.Property<int?>("PartId1")
                                .HasColumnType("int");

                            b1.Property<string>("Type")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<DateTime>("UploadDate")
                                .HasColumnType("datetime(6)");

                            b1.Property<string>("Url")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.HasKey("Id");

                            b1.HasIndex("PartId");

                            b1.HasIndex("PartId1");

                            b1.ToTable("Document");

                            b1.WithOwner()
                                .HasForeignKey("PartId");

                            b1.HasOne("EIMS.Shared.Models.Part", "Part")
                                .WithMany()
                                .HasForeignKey("PartId1");

                            b1.Navigation("Part");
                        });

                    b.Navigation("Documents");
                });

            modelBuilder.Entity("PartPart", b =>
                {
                    b.HasOne("EIMS.Shared.Models.Part", null)
                        .WithMany()
                        .HasForeignKey("PartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EIMS.Shared.Models.Part", null)
                        .WithMany()
                        .HasForeignKey("SubstitutesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
